name: Build Lint Test and Coverage

on:
  push:
    branches: [ main, "v*"]
  pull_request:
    branches: [ main, "v*"]

jobs:
  build-lint-test-coverage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3
      - name: Get git tags
        run:  git fetch --prune --unshallow --tags
      - name: Setup PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: true
          cache-dependency-path: ./pyproject.toml
      - name: Install Testing Dependencies
        run: |
          pip install uv
          pdm config use_uv true
          pdm install -G test
      - name: Fix library paths on macOS
        if: runner.os == 'macOS'
        run: |
          install_name_tool -add_rpath "$PWD/.venv/lib/python${{ matrix.python-version }}/site-packages" .venv/lib/python${{ matrix.python-version }}/site-packages/libassist.cpython-${{ matrix.python-version }}-darwin.so
      - name: Fix library paths on Linux
        if: runner.os == 'Linux'
        run: |
          patchelf --add-rpath "$PWD/.venv/lib/python${{ matrix.python-version }}/site-packages" .venv/lib/python${{ matrix.python-version }}/site-packages/libassist.cpython-${{ matrix.python-version }}-linux.so
      - name: Lint
        run: pdm run lint
      - name: Test with coverage
        run: pdm run coverage
      - name: Coverage report to coveralls
        uses: coverallsapp/github-action@v2.0.0
        with:
          path-to-lcov: coverage.xml
      - name: Run benchmarks
        run: |
          pdm run benchmark --benchmark-json bench.json
      - name: Store main benchmark result
        if: github.ref == 'refs/heads/main'
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Python Benchmark
          tool: 'pytest'
          output-file-path: bench.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          gh-pages-branch: gh-pages
      - name: Compare benchmarks
        if: github.event_name == 'pull_request'
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Python Benchmark
          tool: 'pytest'
          output-file-path: bench.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-always: true
          fail-threshold: '200%'
          alert-threshold: '150%'
          auto-push: false
